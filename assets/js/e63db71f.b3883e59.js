"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[595],{6808:(e,n,d)=>{d.d(n,{A:()=>l});const l=d.p+"assets/images/image-6202ed0ce435d6b35da6e345b4ca8ba7.png"},7074:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>x,frontMatter:()=>c,metadata:()=>l,toc:()=>i});var l=d(7380),s=d(4848),a=d(8453);const c={slug:"foldables-and-friends",title:"Foldables and friends",authors:["dream2405"],tags:["haskell","functional_programming"],image:"./image.png"},r=void 0,o={image:d(8543).A,authorsImageUrls:[void 0]},i=[{value:"Monoids",id:"monoids",level:2},{value:"Examples",id:"examples",level:3},{value:"Foldables",id:"foldables",level:2},{value:"Examples",id:"examples-1",level:3},{value:"Other primitives and defaults",id:"other-primitives-and-defaults",level:3},{value:"Generic functions",id:"generic-functions",level:3},{value:"Traversables",id:"traversables",level:2},{value:"Examples",id:"examples-2",level:3},{value:"Other primitives and defaults",id:"other-primitives-and-defaults-1",level:3}];function h(e){const n={admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"banner",src:d(6808).A+"",width:"1204",height:"696"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc774 \uae00\uc5d0\uc11c\ub294 \ud558\uc2a4\ucf08\uc5d0\uc11c \ub370\uc774\ud130 \uad6c\uc870\uc758 \uac12\ub4e4\uc744 \ucc98\ub9ac\ud558\ub294 \uc138 \uac00\uc9c0 \uc77c\ubc18\uc801\uc778 \ud328\ud134\uc744 \uc18c\uac1c\ud55c\ub2e4. \uba3c\uc800 \uac12\uc744 \uacb0\ud569\ud558\ub294 \ub370 \uacb0\ud569 \uc5f0\uc0b0\uc790(associative operator)\ub97c \uc0ac\uc6a9\ud558\ub294 ",(0,s.jsx)(n.strong,{children:"\ubaa8\ub178\uc774\ub4dc(monoids)"})," \ub85c \uc2dc\uc791\ud574, \uadf8 \ub2e4\uc74c\uc73c\ub85c \ub9ac\uc2a4\ud2b8\uc5d0 \ub300\ud55c \ud3f4\ub529(folding) \uac1c\ub150\uc744 \ub9e4\uac1c\ubcc0\uc218\ud654\ub41c \ud0c0\uc785\uc73c\ub85c \uc77c\ubc18\ud654\ud558\ub294 ",(0,s.jsx)(n.strong,{children:"\ud3f4\ub354\ube14(foldables)"})," \uc744 \uc0b4\ud3b4\ubcf4\uace0, \ub9e4\ud551(mapping)\uc758 \uac1c\ub150\uc744 \ub354\uc6b1 \uc77c\ubc18\ud654\ud558\ub294 ",(0,s.jsx)(n.strong,{children:"\ud2b8\ub798\ubc84\uc11c\ube14(traversables)"})," \ub85c \ub9c8\ubb34\ub9ac\ud560 \uac83\uc774\ub2e4."]}),"\n",(0,s.jsx)(n.h2,{id:"monoids",children:"Monoids"}),"\n",(0,s.jsx)(n.p,{children:"\uc218\ud559\uc5d0\uc11c \ubaa8\ub178\uc774\ub4dc\ub780 \uc9d1\ud569\uc758 \ub450 \uc6d0\uc18c\ub97c \uacb0\ud569\ud558\ub294 \uacb0\ud569 \uc5f0\uc0b0\uc790(associative operator)\uc640, \uadf8 \uc5f0\uc0b0\uc790\uc5d0 \ub300\ud55c \ud56d\ub4f1\uc6d0(identity element)\uc744 \uac16\ucd98 \uc9d1\ud569\uc774\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc815\uc218 \uc9d1\ud569\uc740 \ub367\uc148 \uc5f0\uc0b0\uacfc \ud56d\ub4f1\uc6d0\uc778 0\uc73c\ub85c \ubaa8\ub178\uc774\ub4dc\ub97c \ud615\uc131\ud55c\ub2e4."}),"\n",(0,s.jsx)(n.p,{children:"\ud558\uc2a4\ucf08\uc5d0\uc11c\ub294 \ubaa8\ub178\uc774\ub4dc\uc758 \uac1c\ub150\uc774 \ub2e4\uc74c\uacfc \uac19\uc740 \ub0b4\uc7a5 \ud074\ub798\uc2a4 \uc120\uc5b8\uc73c\ub85c \uad6c\ud604\ub41c\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"class Monoid a where\n    mempty  :: a\n    mappend :: a -> a -> a\n\n    mconcat :: [a] -> a\n    mconcat = foldr mappend mempty\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc989, \uc5b4\ub5a4 \ud0c0\uc785\uc774 ",(0,s.jsx)(n.code,{children:"Monoid"})," \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \ub418\ub824\uba74, \ubaa8\ub178\uc774\ub4dc\uc758 \ud56d\ub4f1\uc6d0\uacfc \uacb0\ud569 \uc5f0\uc0b0\uc790\uc758 \uc5ed\ud560\uc744 \uc218\ud589\ud558\ub294 ",(0,s.jsx)(n.code,{children:"mempty"})," \uac12\uacfc ",(0,s.jsx)(n.code,{children:"mappend"})," \ud568\uc218\ub97c \uc9c0\uc6d0\ud574\uc57c \ud55c\ub2e4. \uc2e4\uc81c \ucf54\ub4dc\uc5d0\uc11c\ub294 ",(0,s.jsx)(n.code,{children:"mappend"})," \ud568\uc218 \uc591\ucabd\uc5d0 \uc5ed\ub530\uc634\ud45c(back quote)\ub97c \ubd99\uc5ec ",(0,s.jsx)(n.code,{children:"x `mappend` y"}),"\uc640 \uac19\uc774 \uc911\uc704(infix) \uc5f0\uc0b0\uc790\ub85c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\ub2e4."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Monoid"})," \ud074\ub798\uc2a4\ub294 \uc774 \ub450 \uac00\uc9c0 \uae30\ubcf8 \uc694\uc18c \uc678\uc5d0\ub3c4, \ub9ac\uc2a4\ud2b8\uc758 \uac01 cons\ub97c ",(0,s.jsx)(n.code,{children:"mappend"}),"\ub85c, \ube44\uc5b4\uc788\ub294 \ub9ac\uc2a4\ud2b8(",(0,s.jsx)(n.code,{children:"[]"}),")\ub97c ",(0,s.jsx)(n.code,{children:"mempty"}),"\ub85c \ub300\uccb4\ud558\uc5ec \ub9ac\uc2a4\ud2b8\uc758 \uac12\ub4e4\uc744 \ubaa8\ub450 \uacb0\ud569\ud558\ub294 ",(0,s.jsx)(n.code,{children:"mconcat"})," \ud568\uc218\ub3c4 \uae30\ubcf8 \uc815\uc758\ub85c \uc81c\uacf5\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, ",(0,s.jsx)(n.code,{children:"[x,y,z]"})," \ud615\ud0dc\uc758 \ub9ac\uc2a4\ud2b8\uc5d0 mconcat\uc744 \uc801\uc6a9\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\ub2e4."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"x `mappend` (y `mappend` (z `mappend` mempty))"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc218\ud559\uc5d0\uc11c\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c, ",(0,s.jsx)(n.code,{children:"Monoid"})," \ud074\ub798\uc2a4\uc758 \ub450 \uae30\ubcf8 \uc694\uc18c\ub294 \ub2e4\uc74c\uc758 \ud56d\ub4f1 \ubc95\uce59\uacfc \uacb0\ud569 \ubc95\uce59\uc744 \ubc18\ub4dc\uc2dc \ub9cc\uc871\ud574\uc57c \ud55c\ub2e4."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mempty `mappend` x"})," = ",(0,s.jsx)(n.code,{children:"x"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"x `mappend` mempty"})," = ",(0,s.jsx)(n.code,{children:"x"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"x `mappend` (y `mappend` z)"})," = ",(0,s.jsx)(n.code,{children:"(x `mappend` y) `mappend` z"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["\uc608\ub97c \ub4e4\uc5b4, \uc774 \ubc95\uce59\ub4e4\uc744 \uc0ac\uc6a9\ud558\uba74 ",(0,s.jsx)(n.code,{children:"mconcat [x,y,z]"}),"\uc758 \uacb0\uacfc\ub294 \ub354 \uac04\ub2e8\ud55c \ud615\ud0dc\ub85c \uc791\uc131\ub420 \uc218 \uc788\ub2e4. \ubaa8\ub178\uc774\ub4dc \ubc95\uce59\uc740 \uad04\ud638\ub098 ",(0,s.jsx)(n.code,{children:"mempty"}),"\uac00 \uacb0\uacfc\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc74c\uc744 \ubcf4\uc7a5\ud558\ubbc0\ub85c, \uc774\ub97c \uc0dd\ub7b5\ud560 \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"x `mappend` y `mappend` z\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["\ud5a5\ud6c4 \ud558\uc2a4\ucf08\uc758 ",(0,s.jsx)(n.code,{children:"Monoid"})," \ud074\ub798\uc2a4\ub294 \ub450 \uac1c\uc758 \uac1c\ubcc4 \ud074\ub798\uc2a4\ub85c \ub098\ub260 \uc218\ub3c4 \uc788\ub2e4.",(0,s.jsx)(n.br,{}),"\n","\ud558\ub098\ub294 \uacb0\ud569 \uc5f0\uc0b0\uc790\ub97c \uc81c\uacf5\ud558\ub294 \ud074\ub798\uc2a4\uc774\uace0, \ub2e4\ub978 \ud558\ub098\ub294 \ud56d\ub4f1\uc6d0\uc744 \uc81c\uacf5\ud558\ub294 \ud074\ub798\uc2a4\uc774\ub2e4."]})}),"\n",(0,s.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Data.Monoid"})," \ub77c\uc774\ube0c\ub7ec\ub9ac\uc5d0\ub294 \uc5ec\ub7ec \ud45c\uc900 \ubaa8\ub178\uc774\ub4dc\uac00 \uc81c\uacf5\ub41c\ub2e4. \uac00\uc7a5 \uac04\ub2e8\ud55c \uc608\ub294 \ub9ac\uc2a4\ud2b8 \ubaa8\ub178\uc774\ub4dc\uc778\ub370, \uc5ec\uae30\uc11c ",(0,s.jsx)(n.code,{children:"mempty"}),"\uc640 ",(0,s.jsx)(n.code,{children:"mappend"}),"\ub294 \uac01\uac01 \ube48 \ub9ac\uc2a4\ud2b8\uc640 \ub9ac\uc2a4\ud2b8 \uacb0\ud569 \uc5f0\uc0b0\uc790\ub85c \uad6c\ud604\ub41c\ub2e4"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"instance Monoid [a] where\n    -- mempty :: [a]\n    mempty = []\n  \n    -- mappend :: [a] -> [a] -> [a]\n    mappend = (++)\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["\uba54\uc11c\ub4dc\uc758 \uc774\ub984 ",(0,s.jsx)(n.code,{children:"mempty"}),"\uc640 ",(0,s.jsx)(n.code,{children:"mappend"}),"\ub294 \uc774 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ub530\uc628 \uac83\uc774\uc9c0\ub9cc, \uc77c\ubc18\uc801\uc73c\ub85c \ubaa8\ub178\uc774\ub4dc\uc758 \uae30\ubcf8 \uc5f0\uc0b0\uc774 \ubb34\uc870\uac74 \ube48 \uac12\uc774\ub098 \uac12\uc744 \ucd94\uac00\ud558\ub294 \uae30\ub2a5\uc5d0 \ud574\ub2f9\ud560 \ud544\uc694\ub294 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \uc774\ub984 \uc120\ud0dd\uc774 \ub2e4\uc18c \uc544\uc27d\ub2e4\uace0 \ubcfc \uc218 \uc788\ub2e4.",(0,s.jsx)(n.br,{}),"\n","\ubaa8\ub178\uc774\ub4dc \ubc95\uce59\uc744 \ub9cc\uc871\ud558\ub294 \ub450 \uac1c\uc758 \uae30\ubcf8 \uc5f0\uc0b0\ub9cc \ub9cc\uc871\ud558\uba74 \ucda9\ubd84\ud558\ub2e4."]})}),"\n",(0,s.jsxs)(n.p,{children:["\ub450 \ubc88\uc9f8 \uc608\ub85c, ",(0,s.jsx)(n.code,{children:"Maybe a"})," \ud0c0\uc785\ub3c4 \ub9e4\uac1c\ubcc0\uc218 \ud0c0\uc785 ",(0,s.jsx)(n.code,{children:"a"}),"\uac00 \ubaa8\ub178\uc774\ub4dc\ub77c\uba74 \ubaa8\ub178\uc774\ub4dc\ub85c \ub9cc\ub4e4 \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"instance Monoid a => Monoid (Maybe a) where\n    -- mempty :: Maybe a\n    mempty = Nothing\n    \n    -- mappend :: Maybe a -> Maybe a -> Maybe a\n    Nothing  `mappend` my         = my\n    mx       `mappend` Nothing    = mx\n    Just x   `mappend` Just y     = Just (x `mappend` y)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc5ec\uae30\uc11c ",(0,s.jsx)(n.code,{children:"mempty"}),"\ub294 \uc2e4\ud328\ub97c \ub098\ud0c0\ub0b4\ub294 ",(0,s.jsx)(n.code,{children:"Nothing"}),"\uc774\uace0, ",(0,s.jsx)(n.code,{children:"mappend"}),"\ub294 \uc2e4\ud328\ud560 \uc218 \uc788\ub294 \ub450 \uc778\uc218\uc758 \uacb0\uacfc\ub97c \uc870\ud569\ud55c\ub2e4.\n\ud55c\ucabd \uc778\uc218\uac00 \uc2e4\ud328\ud558\uba74 \ub2e4\ub978 \ucabd \uc778\uc218\ub97c \ubc18\ud658\ud558\uace0, \ub458 \ub2e4 \uc131\uacf5\ud558\uba74 \ub9e4\uac1c\ubcc0\uc218 \ud0c0\uc785 ",(0,s.jsx)(n.code,{children:"a"}),"\uc758 ",(0,s.jsx)(n.code,{children:"mappend"}),"\ub97c \uc0ac\uc6a9\ud574 \ub450 \uacb0\uacfc\uac12\uc744 \uacb0\ud569\ud55c\ub2e4.\n\ud55c\ucabd\uc774 \uc2e4\ud328\ud558\uba74 \ub2e4\ub978 \ucabd \uc778\uc218\ub97c \ubc18\ud658\ud558\uace0, \ub458 \ub2e4 \uc131\uacf5\ud558\uba74 \ub9e4\uac1c\ubcc0\uc218 \ud0c0\uc785 ",(0,s.jsx)(n.code,{children:"a"}),"\uc758 ",(0,s.jsx)(n.code,{children:"mappend"}),"\ub85c \ub450 \uacb0\uacfc\uac12\uc744 \ud569\uce5c\ub2e4."]}),"\n",(0,s.jsx)(n.p,{children:"\ud558\ub098\uc758 \ud0c0\uc785\uc774 \uc5ec\ub7ec \uac00\uc9c0 \ubc29\uc2dd\uc73c\ub85c \ubaa8\ub178\uc774\ub4dc\ub97c \uad6c\uc131\ud560 \uc218 \uc788\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc815\uc218\uac00 \ub367\uc148\uc5d0\uc11c \ubaa8\ub178\uc774\ub4dc\ub97c \uc774\ub8ec\ub2e4\ub294 \uac83\uc744 \uc774\ubbf8 \uc0b4\ud3b4\ubd24\uc73c\ubbc0\ub85c, \ub2e4\uc74c\uacfc \uac19\uc774 \uac04\ub2e8\ud55c \uc778\uc2a4\ud134\uc2a4\ub97c \uc120\uc5b8\ud560 \uc218 \uc788\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"instance Monoid Int where\n    -- mempty :: Int\n    mempty = 0\n    \n    -- mappend :: Int -> Int -> Int\n    mappend = (+)\n"})}),"\n",(0,s.jsx)(n.p,{children:"\uc815\uc218\ub294 \uacf1\uc148\uc5d0\uc11c\ub3c4 \ubaa8\ub178\uc774\ub4dc\ub97c \uc774\ub8e8\uba70, \uc774\ub54c \ud56d\ub4f1\uc6d0\uc740 1\uc774\ubbc0\ub85c \ub2e4\uc74c\uacfc \uac19\uc774 \uc120\uc5b8\ud560 \uc218\ub3c4 \uc788\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"instance Monoid Int where\n    -- mempty :: Int\n    mempty = 1\n    \n    -- mappend :: Int -> Int -> Int\n    mappend = (*)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ud558\uc9c0\ub9cc \ud558\uc2a4\ucf08\uc5d0\uc11c\ub294 \uac19\uc740 \ud0c0\uc785\uc5d0 \ub300\ud574 \uac19\uc740 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc5ec\ub7ec \uac1c \uc120\uc5b8\ud560 \uc218 \uc5c6\ub2e4. \ub530\ub77c\uc11c ",(0,s.jsx)(n.code,{children:"Monoid Int"}),"\uc5d0 \ub300\ud574 \uc774\ub7f0 \uc2dd\uc73c\ub85c \ub450 \uac1c\uc758 \ubcc4\ub3c4 \uc778\uc2a4\ud134\uc2a4\ub97c \uc120\uc5b8\ud558\ub824 \ud558\uba74 \uc624\ub958\uac00 \ubc1c\uc0dd\ud55c\ub2e4."]}),"\n",(0,s.jsx)(n.p,{children:"\ud574\uacb0\ucc45\uc740 \uac01 \uc778\uc2a4\ud134\uc2a4\ub9c8\ub2e4 \uc804\uc6a9 \ub798\ud37c \ud0c0\uc785\uc744 \ub9cc\ub4dc\ub294 \uac83\uc774\ub2e4."}),"\n",(0,s.jsxs)(n.p,{children:["\ub367\uc148\uc758 \uacbd\uc6b0, \ubaa8\ub178\uc774\ub4dc \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \uc0c8\ub85c\uc6b4 \ud0c0\uc785 ",(0,s.jsx)(n.code,{children:"Sum a"}),"\ub97c \uc120\uc5b8\ud558\ub294\ub370, \uc774\ub294 ",(0,s.jsx)(n.code,{children:"Sum"}),"\uc774\ub77c\ub294 \ub354\ubbf8 \uc0dd\uc131\uc790\ub97c \uac00\uc9c0\uace0 \uc788\uc73c\uba70 \ud0c0\uc785 ",(0,s.jsx)(n.code,{children:"a"}),"\uc758 \ub2e8\uc77c \uc778\uc218\ub97c \ubc1b\ub294\ub2e4. \ub610\ud55c \uc0dd\uc131\uc790\ub97c \uc81c\uac70\ud558\ub294 \ud568\uc218\ub3c4 \ud568\uaed8 \uc81c\uacf5\ud55c\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"newtype Sum a = Sum a\n    deriving (Eq, Ord, Show, Read)\n\ngetSum :: Sum a -> a\ngetSum (Sum x) = x\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc704\uc758 ",(0,s.jsx)(n.code,{children:"deriving"})," \uc808\uc740 ",(0,s.jsx)(n.code,{children:"Sum a"})," \ud0c0\uc785\uc758 \uac12\ub4e4\uc774 \ud45c\uc900 \ub3d9\ub4f1\uc131 \ubc0f \uc21c\uc11c \uc5f0\uc0b0\uc790\ub97c \uc9c0\uc6d0\ud558\uace0, \ubb38\uc790\uc5f4\ub85c \ubcc0\ud658\ud558\uac70\ub098 \ubb38\uc790\uc5f4\uc5d0\uc11c \ubcc0\ud658\ud560 \uc218 \uc788\ub3c4\ub85d \ubcf4\uc7a5\ud55c\ub2e4. \uc774\uc81c \uc22b\uc790 \ud0c0\uc785(",(0,s.jsx)(n.code,{children:"Int"})," \uac19\uc740)\uc778 \ub9e4\uac1c\ubcc0\uc218 \ud0c0\uc785 ",(0,s.jsx)(n.code,{children:"a"}),"\uc5d0 \ub300\ud574, ",(0,s.jsx)(n.code,{children:"Sum a"})," \ud0c0\uc785\uc744 \ubaa8\ub178\uc774\ub4dc\ub85c \ub9cc\ub4e4 \uc218 \uc788\ub2e4. ",(0,s.jsx)(n.code,{children:"mempty"}),"\ub294 ",(0,s.jsx)(n.code,{children:"Sum 0"}),"\uc73c\ub85c, ",(0,s.jsx)(n.code,{children:"mappend"}),"\ub294 ",(0,s.jsx)(n.code,{children:"Sum a"})," \ud0c0\uc785 \uac12\ub4e4\uc5d0 \ub300\ud55c \ub367\uc148 \uc5f0\uc0b0\uc790\ub85c \uc815\uc758\ud55c\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"instance Num a => Monoid (Sum a) where\n    -- mempty :: Sum a\n    mempty = Sum 0\n\n    -- mappend :: Sum a -> Sum a -> Sum a\n    Sum x `mappend` Sum y = Sum (x+y)\n"})}),"\n",(0,s.jsx)(n.p,{children:"\uc608\ub97c \ub4e4\uc5b4, \uc774 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"> mconcat [Sum 2, Sum 3, Sum 4]\nSum 9\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["GHCi\uc5d0\uc11c \uc774\ub7f0 \uc608\uc81c\ub97c \uc2dc\ub3c4\ud574\ubcf4\ub824\uba74 \uba3c\uc800 ",(0,s.jsx)(n.code,{children:"import Data.Monoid"}),"\ub97c \uc785\ub825\ud574 \ubaa8\ub178\uc774\ub4dc \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ub85c\ub4dc\ud574\uc57c \ud55c\ub2e4."]})}),"\n",(0,s.jsxs)(n.p,{children:["\ud2b9\ud788, \ub9ac\uc2a4\ud2b8\uc758 \uac01 \uc22b\uc790\uc5d0 ",(0,s.jsx)(n.code,{children:"Sum"}),"\uc744 \uc801\uc6a9\ud558\uba74 ",(0,s.jsx)(n.code,{children:"mconcat"}),"\uc774 \ud569\uacc4\ub97c \uad6c\ud558\uae30 \uc704\ud574 \ubaa8\ub178\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud558\uac8c \ub41c\ub2e4."]}),"\n",(0,s.jsxs)(n.p,{children:["\ub9c8\ucc2c\uac00\uc9c0\ub85c \uc22b\uc790 \uacf1\uc148\uc758 \uacbd\uc6b0, \ubaa8\ub178\uc774\ub4dc \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \ub367\uc148\uacfc \uac19\uc740 \uc811\uadfc \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud574 \uc0c8\ub85c\uc6b4 \ud0c0\uc785 ",(0,s.jsx)(n.code,{children:"Product a"}),"\ub97c \uc120\uc5b8\ud55c\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"newtype Product a = Product a\n    deriving (Eq, Ord, Show, Read)\n\ngetProduct :: Product a -> a\ngetProduct (Product x) = x\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uadf8\ub7ec\uba74 ",(0,s.jsx)(n.code,{children:"Product a"})," \ud0c0\uc785\uc744 \uacf1\uc148\uc5d0 \uc801\ud569\ud55c \ubc29\uc2dd\uc73c\ub85c \ub450 \uae30\ubcf8 \uc5f0\uc0b0\uc744 \uc815\uc758\ud574\uc11c ",(0,s.jsx)(n.code,{children:"Monoid"})," \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub85c \ub9cc\ub4e4 \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"instance Num a => Monoid (Product a) where\n    -- mempty :: Product a\n    mempty = Product 1\n    \n    -- mappend :: Product a -> Product a -> Product a\n    Product x `mappend` Product y = Product (x*y)\n"})}),"\n",(0,s.jsx)(n.p,{children:"\uc608\ub97c \ub4e4\uc5b4"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"> mconcat [Product 2, Product 3, Product 4]\nProduct 24\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ube44\uc2b7\ud55c \ubc29\uc2dd\uc73c\ub85c, \ub17c\ub9ac\uac12 \ud0c0\uc785\uc740 \ub17c\ub9ac\uacf1\uacfc \ub17c\ub9ac\ud569 \ubaa8\ub450\uc5d0 \ub300\ud574 \ubaa8\ub178\uc774\ub4dc\ub97c \ud615\uc131\ud55c\ub2e4. \uc774\ub97c \uc704\ud574 \ubaa8\ub178\uc774\ub4dc \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 ",(0,s.jsx)(n.code,{children:"Bool"})," \ud0c0\uc785\uc744 \uc704\ud55c ",(0,s.jsx)(n.code,{children:"All"}),"\uacfc ",(0,s.jsx)(n.code,{children:"Any"}),"\ub77c\ub294 wrapper \ud0c0\uc785\uc744 \uc81c\uacf5\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, ",(0,s.jsx)(n.code,{children:"All"}),"\uc5d0 \ub300\ud55c ",(0,s.jsx)(n.code,{children:"mconcat"})," \ud568\uc218\ub294 \ub9ac\uc2a4\ud2b8\uc758 \ubaa8\ub4e0 \ub17c\ub9ac\uac12\uc774 ",(0,s.jsx)(n.code,{children:"True"}),"\uc778\uc9c0 \uacb0\uc815\ud558\uace0, ",(0,s.jsx)(n.code,{children:"Any"}),"\uc5d0 \ub300\ud574\uc11c\ub294 \uadf8\ub7f0 \uac12\uc774 \ud558\ub098\ub77c\ub3c4 \uc788\ub294\uc9c0 \uacb0\uc815\ud55c\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"> mconcat [All True, All True, All True]\nAll True\n\n> mconcat [Any False, Any False, Any False]\nAny False\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["\ud558\uc2a4\ucf08 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 ",(0,s.jsx)(n.code,{children:"x <> y"})," = ",(0,s.jsx)(n.code,{children:"x `mappend` y"}),"\ub85c \uc815\uc758\ub418\ub294 ",(0,s.jsx)(n.code,{children:"mappend"}),"\uc758 \uc911\uc704(infix) \ubc84\uc804\uc744 \uc81c\uacf5\ud55c\ub2e4.",(0,s.jsx)(n.br,{}),"\n","\uc774\ub294 ",(0,s.jsx)(n.code,{children:"x <> y <> z"}),"\uc5d0\uc11c\ucc98\ub7fc \ubaa8\ub178\uc774\ub4dc \ud45c\ud604\uc2dd\uc744 \ub354 \uac04\uacb0\ud558\uac8c \uc791\uc131\ud560 \uc218 \uc788\uac8c \ud574\uc900\ub2e4. \uc774 \uc5f0\uc0b0\uc790\ub294 \uc2e4\uc81c \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c \uc790\uc8fc \uc0ac\uc6a9\ub418\uc9c0\ub9cc, \uc774 \uc7a5\uc5d0\uc11c\ub294 \uc124\uba85\uc758 \ubaa9\uc801\uc73c\ub85c ",(0,s.jsx)(n.code,{children:"mappend"})," \uae30\ubcf8 \ud568\uc218\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud588\ub2e4."]})}),"\n",(0,s.jsx)(n.h2,{id:"foldables",children:"Foldables"}),"\n",(0,s.jsxs)(n.p,{children:["\ud558\uc2a4\ucf08\uc5d0\uc11c \ubaa8\ub178\uc774\ub4dc\uc758 \uc8fc\uc694 \uc751\uc6a9 \uc911 \ud558\ub098\ub294 \ub370\uc774\ud130 \uad6c\uc870\uc758 \ubaa8\ub4e0 \uac12\uc744 \uacb0\ud569\ud558\uc5ec \ub2e8\uc77c \uac12\uc744 \ub9cc\ub4dc\ub294 \uac83\uc774\ub2e4.\n\uc608\ub97c \ub4e4\uc5b4 \ub9ac\uc2a4\ud2b8\uc758 \uacbd\uc6b0 \uc774 \uc544\uc774\ub514\uc5b4\ub97c \uad6c\ud604\ud558\ub294 ",(0,s.jsx)(n.code,{children:"fold"})," \ud568\uc218\ub97c \ub2e4\uc74c\uacfc \uac19\uc774 \uc815\uc758\ud560 \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"fold :: Monoid a => [a] -> a\nfold []     = mempty\nfold (x:xs) = x `mappend` fold xs\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc989, \ube48 \ub9ac\uc2a4\ud2b8\uc5d0 ",(0,s.jsx)(n.code,{children:"fold"}),"\ub97c \uc801\uc6a9\ud558\uba74 \ubaa8\ub178\uc774\ub4dc\uc758 \ud56d\ub4f1\uc6d0 ",(0,s.jsx)(n.code,{children:"mempty"}),"\uac00 \ub098\uc624\uace0, \ube44\uc5b4\uc788\uc9c0 \uc54a\uc740 \ub9ac\uc2a4\ud2b8\uc758 \uacbd\uc6b0\uc5d0\ub294 \ubaa8\ub178\uc774\ub4dc \uc5f0\uc0b0\uc790 ",(0,s.jsx)(n.code,{children:"mappend"}),"\ub97c \uc0ac\uc6a9\ud574 \ub9ac\uc2a4\ud2b8\uc758 \uba38\ub9ac\uc640 \uaf2c\ub9ac\ub97c \uc7ac\uadc0\uc801\uc73c\ub85c \ucc98\ub9ac\ud55c \uacb0\uacfc\ub97c \uacb0\ud569\ud55c\ub2e4."]}),"\n",(0,s.jsxs)(n.p,{children:["\uc608\ub97c \ub4e4\uc5b4 ",(0,s.jsx)(n.code,{children:"[x,y,z]"})," \ud615\ud0dc\uc758 \ub9ac\uc2a4\ud2b8\uc5d0 fold\ub97c \uc801\uc6a9\ud558\uba74"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"x `mappend` (y `mappend` (z `mappend` mempty))\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ub2e4\uc2dc \ub9d0\ud574, ",(0,s.jsx)(n.code,{children:"fold"}),"\ub294 \ubaa8\ub178\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud574 \ub9ac\uc2a4\ud2b8\ub97c '\uc811\ub294' \uac04\ub2e8\ud55c \ubc29\ubc95\uc744 \uc81c\uacf5\ud558\uba70, \uc774\uac83\uc774 \ud568\uc218 \uc774\ub984\uc744 \uc120\ud0dd\ud55c \uc774\uc720\ub2e4.",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.code,{children:"fold"}),"\ub294 ",(0,s.jsx)(n.code,{children:"Monoid"})," \ud074\ub798\uc2a4\uc758 ",(0,s.jsx)(n.code,{children:"mconcat"}),"\uacfc \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \uc791\ub3d9\ud558\uc9c0\ub9cc, ",(0,s.jsx)(n.code,{children:"foldr"}),"\uc744 \uc0ac\uc6a9\ud558\ub294 \ub300\uc2e0 \uba85\uc2dc\uc801 \uc7ac\uadc0\ub97c \uc0ac\uc6a9\ud574 \uc815\uc758\ub41c\ub2e4\ub294 \uc810\uc5d0 \uc8fc\ubaa9\ud558\uc790."]}),"\n",(0,s.jsxs)(n.p,{children:["\ube44\uc2b7\ud55c \ubc29\uc2dd\uc73c\ub85c, leaf\uc5d0 \ub370\uc774\ud130\ub97c \uac00\uc9c4 \uc774\uc9c4 \ud2b8\ub9ac \ud0c0\uc785\uc5d0 \ub300\ud574\uc11c\ub3c4 ",(0,s.jsx)(n.code,{children:"fold"})," \ubc84\uc804\uc744 \uc815\uc758\ud560 \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"data Tree a = Leaf a | Node (Tree a) (Tree a)\n    deriving Show\n\nfold :: Monoid a => Tree a -> a\nfold (Leaf x)   = x\nfold (Node l r) = fold l `mappend` fold r\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc989, leaf\uc758 \uacbd\uc6b0\uc5d0\ub294 \ub2e8\uc21c\ud788 \uadf8\uac83\uc774 \ud3ec\ud568\ud558\ub294 \uac12\uc744 \ubc18\ud658\ud558\uace0, \ub178\ub4dc\uc758 \uacbd\uc6b0\uc5d0\ub294 \ub450 \ud558\uc704 \ud2b8\ub9ac\ub97c \uc7ac\uadc0\uc801\uc73c\ub85c \uc811\uace0 ",(0,s.jsx)(n.code,{children:"mappend"}),"\ub97c \uc0ac\uc6a9\ud574 \uacb0\uacfc \uac12\ub4e4\uc744 \uacb0\ud569\ud55c\ub2e4. \uc774 \uc608\uc81c\uc5d0\uc11c\ub294 \uc774\ub7f0 \ud0c0\uc785\uc758 \ud2b8\ub9ac\uac00 \ud56d\uc0c1 \ube44\uc5b4\uc788\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \uc815\uc758\uc5d0\uc11c \ud56d\ub4f1\uc6d0 ",(0,s.jsx)(n.code,{children:"mempty"}),"\ub97c \uc0ac\uc6a9\ud560 \ud544\uc694\uac00 \uc5c6\ub2e4."]}),"\n",(0,s.jsxs)(n.p,{children:["\ub354 \uc77c\ubc18\uc801\uc73c\ub85c, \ubaa8\ub178\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud574 \ub370\uc774\ud130 \uad6c\uc870\uc758 \uac12\ub4e4\uc744 \uc811\ub294 \uc544\uc774\ub514\uc5b4\ub294 \ub9ac\uc2a4\ud2b8\ub098 \uc774\uc9c4 \ud2b8\ub9ac \uac19\uc740 \ud0c0\uc785\uc5d0\ub9cc \ud55c\uc815\ub418\uc9c0 \uc54a\uace0, \ub2e4\uc591\ud55c \ub9e4\uac1c\ubcc0\uc218\ud654\ub41c \ud0c0\uc785\uc73c\ub85c \ucd94\uc0c1\ud654\ud560 \uc218 \uc788\ub2e4. \ud558\uc2a4\ucf08\uc5d0\uc11c\ub294 \uc774 \uac1c\ub150\uc774 ",(0,s.jsx)(n.code,{children:"Data.Foldable"})," \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \ub2e4\uc74c \ud074\ub798\uc2a4 \uc120\uc5b8\uc73c\ub85c \uad6c\ud604\ub418\uc5b4 \uc788\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"class Foldable t where\n    fold    :: Monoid a => t a -> a\n    foldMap :: Monoid b => (a -> b) -> t a -> b\n    foldr   :: (a -> b -> b) -> b -> t a -> b\n    foldl   :: (a -> b -> a) -> a -> t b -> a\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc989, \ub9e4\uac1c\ubcc0\uc218\ud654\ub41c \ud0c0\uc785\uc774 ",(0,s.jsx)(n.code,{children:"Foldable"})," \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \ub418\ub824\uba74 \uc9c0\uc815\ub41c \ud0c0\uc785\uc758 \ub2e4\uc591\ud55c ",(0,s.jsx)(n.code,{children:"fold"})," \ud568\uc218\ub97c \uc9c0\uc6d0\ud574\uc57c \ud55c\ub2e4. \uc704\uc758 \uc120\uc5b8\uc5d0\uc11c \uad00\ub840\uc801\uc73c\ub85c ",(0,s.jsx)(n.code,{children:"foldable"})," \ud0c0\uc785\uc740 \ubcf4\ud1b5 ",(0,s.jsx)(n.code,{children:"t"}),"\ub85c \ud45c\uc2dc\ub41c\ub2e4."]}),"\n",(0,s.jsxs)(n.p,{children:["\uc9c1\uad00\uc801\uc73c\ub85c, ",(0,s.jsx)(n.code,{children:"Foldable"})," \ud074\ub798\uc2a4\uc758 \uc77c\ubc18\ud654\ub41c ",(0,s.jsx)(n.code,{children:"fold"}),"\ub294 \uc6d0\uc18c\ub4e4\uc774 \ud0c0\uc785 ",(0,s.jsx)(n.code,{children:"a"}),"\ub97c \uac00\uc9c4 \ud0c0\uc785 ",(0,s.jsx)(n.code,{children:"t a"}),"\uc758 \ub370\uc774\ud130 \uad6c\uc870\ub97c \ubc1b\uc544\uc11c, \uc774 \ud0c0\uc785\uc5d0 \ub300\ud55c \ubaa8\ub178\uc774\ub4dc \uae30\ubcf8 \uc5f0\uc0b0\uc744 \uc0ac\uc6a9\ud574 \uc6d0\uc18c\ub4e4\uc744 \uacb0\ud569\ud558\uc5ec \ud0c0\uc785 ",(0,s.jsx)(n.code,{children:"a"}),"\uc758 \ub2e8\uc77c \uac12\uc744 \ub9cc\ub4e0\ub2e4.\n\ubc18\uba74 ",(0,s.jsx)(n.code,{children:"foldMap"}),"\uc740 \ud0c0\uc785 ",(0,s.jsx)(n.code,{children:"a -> b"}),"\uc758 \ud568\uc218\ub97c \ucd94\uac00 \uc778\uc218\ub85c \ubc1b\uc544 ",(0,s.jsx)(n.code,{children:"fold"}),"\ub97c \uc77c\ubc18\ud654\ud558\ub294\ub370, \uc774 \ud568\uc218\ub294 \uad6c\uc870\uc758 \uac01 \uc6d0\uc18c\uc5d0 \uc801\uc6a9\ub41c \ud6c4 \ud0c0\uc785 ",(0,s.jsx)(n.code,{children:"b"}),"\uc5d0 \ub300\ud55c \ubaa8\ub178\uc774\ub4dc \uae30\ubcf8 \uc5f0\uc0b0\uc744 \uc0ac\uc6a9\ud574 \uacb0\uacfc \uac12\ub4e4\uc744 \uacb0\ud569\ud55c\ub2e4."]}),"\n",(0,s.jsxs)(n.p,{children:["\uc704 \ud074\ub798\uc2a4 \uc120\uc5b8\uc758 \ub9c8\uc9c0\ub9c9 \ub450 \ud568\uc218\uc778 ",(0,s.jsx)(n.code,{children:"foldr"}),"\uacfc ",(0,s.jsx)(n.code,{children:"foldl"}),"\uc740 \ub9ac\uc2a4\ud2b8\uc6a9 \uace0\ucc28 \ud568\uc218\ub97c \ub2e4\ub978 \ub370\uc774\ud130 \uad6c\uc870\ub85c \uc77c\ubc18\ud654\ud55c \uac83\uc774\ub2e4.\n\uc774 \ub450 \ud568\uc218\ub294 \ub450 \uac12\uc744 \uacb0\ud569\ud558\ub294 \uc2dc\uc791 \uac12\uacfc \ud568\uc218\uac00 \uc778\uc218\ub85c \uba85\uc2dc\uc801\uc73c\ub85c \uc81c\uacf5\ub418\uae30 \ub54c\ubb38\uc5d0 \uae30\ubcf8 \ubaa8\ub178\uc774\ub4dc\uac00 \ud544\uc694\ud558\uc9c0 \uc54a\ub2e4\ub294 \uc810\uc5d0 \uc8fc\ubaa9\ud558\uc790."]}),"\n",(0,s.jsxs)(n.p,{children:["\uc644\uc804\ud55c \ubc84\uc804\uc758 ",(0,s.jsx)(n.code,{children:"Foldable"})," \ud074\ub798\uc2a4\uc5d0\ub294 \uc5ec\ub7ec \ub2e4\ub978 \uc720\uc6a9\ud55c \ud568\uc218\ub4e4\uacfc \uae30\ubcf8 \uc815\uc758\ub4e4\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc9c0\ub9cc, \uc704\uc5d0\uc11c \uc81c\uc2dc\ud55c \ucd95\uc57d\ub41c \ubc84\uc804\uc744 \uc0b4\ud3b4\ubcf4\ub294 \uac83\ubd80\ud130 \uc2dc\uc791\ud558\uaca0\ub2e4."]}),"\n",(0,s.jsx)(n.h3,{id:"examples-1",children:"Examples"}),"\n",(0,s.jsx)(n.p,{children:"\uc608\uc0c1\ud560 \uc218 \uc788\ub4ef\uc774, \ub9ac\uc2a4\ud2b8 \ud0c0\uc785\uc740 \ud3f4\ub529(folding) \uae30\ubcf8 \ud568\uc218\ub4e4\uc744 \uc801\uc808\ud55c \ubc29\uc2dd\uc73c\ub85c \uc815\uc758\ud568\uc73c\ub85c\uc368 \ud3f4\ub354\ube14 \ud0c0\uc785\uc73c\ub85c \ub9cc\ub4e4 \uc218 \uc788\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"instance Foldable [] where\n    -- fold :: Monoid a => [a] -> a\n    fold []     = mempty\n    fold (x:xs) = x `mappend` fold xs\n    \n    -- foldMap :: Monoid b => (a -> b) -> [a] -> b\n    foldMap _ []     = mempty\n    foldMap f (x:xs) = f x `mappend` foldMap f xs\n    \n    -- foldr :: (a -> b -> b) -> b -> [a] -> b\n    foldr _ v []     = v\n    foldr f v (x:xs) = f x (foldr f v xs)\n    \n    -- foldl :: (a -> b -> a) -> a -> [b] -> a\n    foldl _ v []     = v\n    foldl f v (x:xs) = foldl f (f v x) xs\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc608\ub97c \ub4e4\uc5b4, \uc774\uc804 \uc139\uc158\uc758 \uc22b\uc790 \ubaa8\ub178\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74, ",(0,s.jsx)(n.code,{children:"foldMap"}),"\uc740 \uc774\uc81c \uc22b\uc790 \ub9ac\uc2a4\ud2b8\uc758 \ud569\uacc4\uc640 \uacf1\uc744 \uacc4\uc0b0\ud558\ub294 \ub370 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"> getSum (foldMap Sum [1..10])\n55\n\n> getProduct (foldMap Product [1..10])\n3628800\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["\uc774 \uc608\uc81c\ub97c \uc2e4\ud589\ud558\ub824\uba74, ",(0,s.jsx)(n.code,{children:"Data.Monoid"}),"\uc640 ",(0,s.jsx)(n.code,{children:"Data.Foldable"}),"\uc744 \uc784\ud3ec\ud2b8\ud574\uc57c \ud55c\ub2e4."]})}),"\n",(0,s.jsxs)(n.p,{children:["\uc774\uc9c4 \ud2b8\ub9ac \ub610\ud55c \ube44\uc2b7\ud55c \ubc29\uc2dd\uc73c\ub85c \uc778\uc2a4\ud134\uc2a4\ub97c \uc815\uc758\ud560 \uc218 \uc788\ub2e4.\n\ub2e8, ",(0,s.jsx)(n.code,{children:"foldr"}),"\uacfc ",(0,s.jsx)(n.code,{children:"foldl"}),"\uc774 \ud2b8\ub9ac \ub0b4\uc758 \uac12\ub4e4\uc744 \uac01\uac01 \uc624\ub978\ucabd-\uc5d0\uc11c-\uc67c\ucabd \uc21c\uc11c\uc640 \uc67c\ucabd-\uc5d0\uc11c-\uc624\ub978\ucabd \uc21c\uc11c\ub85c \uacb0\ud569\ud558\ub3c4\ub85d \uc8fc\uc758\ud574\uc57c \ud55c\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"instance Foldable Tree where\n    -- fold :: Monoid a => Tree a -> a\n    fold (Leaf x)   = x\n    fold (Node l r) = fold l `mappend` fold r\n    \n    -- foldMap :: Monoid b => (a -> b) -> Tree a -> b\n    foldMap f (Leaf x)   = f x\n    foldMap f (Node l r) = foldMap f l `mappend` foldMap f r\n    \n    -- foldr :: (a -> b -> b) -> b -> Tree a -> b\n    foldr f v (Leaf x)   = f x v\n    foldr f v (Node l r) = foldr f (foldr f v r) l\n    \n    -- foldl :: (a -> b -> a) -> a -> [b] -> a\n    foldl f v (Leaf x)   = f v x\n    foldl f v (Node l r) = foldl f (foldl f v l) r\n"})}),"\n",(0,s.jsx)(n.p,{children:"\uc608\ub97c \ub4e4\uc5b4, \ub2e4\uc74c\uacfc \uac19\uc740 \uc815\uc218 \ud2b8\ub9ac\ub97c \uc0dd\uac01\ud574\ubcf4\uc790."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"tree :: Tree Int\ntree = Node (Node (Leaf 1) (Leaf 2)) (Leaf 3)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc774\ub54c ",(0,s.jsx)(n.code,{children:"foldr (+) 0 tree"}),"\ub97c \ud3c9\uac00\ud558\uba74 ",(0,s.jsx)(n.code,{children:"(1+(2+(3+0)))"}),"\uc758 \uacb0\uacfc\uc778 ",(0,s.jsx)(n.code,{children:"6"}),"\uc774 \ub098\uc624\ub294\ub370, \ub367\uc148\uc774 \uc624\ub978\ucabd\uc5d0\uc11c \uc67c\ucabd\uc73c\ub85c \uc218\ud589\ub41c\ub2e4.\n\ubc18\uba74 ",(0,s.jsx)(n.code,{children:"foldl (+) 0 tree"}),"\ub294 ",(0,s.jsx)(n.code,{children:"(((0+1)+2)+3)"}),"\uc758 \uacb0\uacfc ",(0,s.jsx)(n.code,{children:"6"}),"\uc744 \ub0b4\ub193\uc73c\uba70, \ub367\uc148\uc740 \uc67c\ucabd\uc5d0\uc11c \uc624\ub978\ucabd\uc73c\ub85c \uc218\ud589\ub41c\ub2e4.\n\ub367\uc148\uc740 \uacb0\ud569 \ubc95\uce59\uc774 \uc131\ub9bd\ud558\ubbc0\ub85c \uc774 \uacbd\uc6b0 \uacb0\uacfc\ub294 \uac19\uc9c0\ub9cc, ",(0,s.jsx)(n.code,{children:"foldl"}),"\uc774 \ub354 \ud6a8\uc728\uc801\uc77c \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsx)(n.h3,{id:"other-primitives-and-defaults",children:"Other primitives and defaults"}),"\n",(0,s.jsxs)(n.p,{children:["\ub124 \uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \ud3f4\ub529 \ud568\uc218 \uc678\uc5d0\ub3c4, ",(0,s.jsx)(n.code,{children:"Foldable"})," \ud074\ub798\uc2a4\ub294 \ub370\uc774\ud130 \uad6c\uc870 \ub0b4\uc758 \uac12\ub4e4\uc744 \uacb0\ud569\ud558\uae30 \uc704\ud55c \ub2e4\uc591\ud558\uace0 \uc720\uc6a9\ud55c \ub2e4\ub978 \ud568\uc218\ub4e4\ub3c4 \ud3ec\ud568\ud55c\ub2e4.",(0,s.jsx)(n.br,{}),"\n","\uccab \ubc88\uc9f8 \uadf8\ub8f9\uc740 \ub9ac\uc2a4\ud2b8\uc5d0 \uc775\uc219\ud55c \ud568\uc218\ub4e4\uc744 \uc77c\ubc18\ud654\ud55c\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"null    :: t a -> Bool\nlength  :: t a -> Int\nelem    :: Eq a => a -> t a -> Bool\nmaximum :: Ord a => t a -> a\nminimum :: Ord a => t a -> a\nsum     :: Num a => t a -> a\nproduct :: Num a => t a -> a\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc608\ub97c \ub4e4\uc5b4, ",(0,s.jsx)(n.code,{children:"null"}),"\uc740 \uad6c\uc870\uac00 \ube44\uc5b4 \uc788\ub294\uc9c0(\uc6d0\uc18c\uac00 \uc5c6\ub294\uc9c0) \uacb0\uc815\ud558\uace0, ",(0,s.jsx)(n.code,{children:"length"}),"\ub294 ",(0,s.jsx)(n.code,{children:"t a"})," \ud0c0\uc785\uc758 \uad6c\uc870 \uc548\uc5d0 \uc788\ub294 ",(0,s.jsx)(n.code,{children:"a"})," \ud0c0\uc785 \uc6d0\uc18c\uc758 \uc218\ub97c \uc13c\ub2e4. \ub530\ub77c\uc11c \uc774 \ud568\uc218\ub4e4\uc740 \ub9ac\uc2a4\ud2b8\uc640 \ud2b8\ub9ac \ubaa8\ub450\uc5d0 \uc801\uc6a9\ub420 \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"> null []\nTrue\n\n> null (Leaf 1)\nFalse\n\n> length [1..10]\n10\n\n> length (Node (Leaf 'a') (Leaf 'b'))\n2\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ub610\ud55c, \uc774 \ud074\ub798\uc2a4\ub294 \uc801\uc5b4\ub3c4 \ud558\ub098\uc758 \uc6d0\uc18c\ub97c \ud3ec\ud568\ud558\uc5ec \uc2dc\uc791 \uac12\uc774 \ud544\uc694 \uc5c6\ub294 \uad6c\uc870\ub97c \uc704\ud55c ",(0,s.jsx)(n.code,{children:"foldr"}),"\uacfc ",(0,s.jsx)(n.code,{children:"foldl"}),"\uc758 \ubc84\uc804\ub3c4 \ud3ec\ud568\ud55c\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"foldr1 :: (a -> a -> a) -> t a -> a\nfoldl1 :: (a -> a -> a) -> t a -> a\n"})}),"\n",(0,s.jsx)(n.p,{children:"\uc608\ub97c \ub4e4\uba74 \ub2e4\uc74c\uacfc \uac19\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"> foldr1 (+) [1..10]\n55\n\n> foldl1 (+) (Node (Leaf 1) (Leaf 2))\n3\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ud074\ub798\uc2a4\uc758 \ub9c8\uc9c0\ub9c9 \uae30\ubcf8 \ud568\uc218\ub294 \ub370\uc774\ud130 \uad6c\uc870\ub97c \ub9ac\uc2a4\ud2b8\ub85c \ud3bc\uce58\ub294(flatten) \uac83\uc73c\ub85c, \uc608\ub97c \ub4e4\uc5b4 ",(0,s.jsx)(n.code,{children:"Node (Leaf 1) (Leaf 2)"})," \ud2b8\ub9ac\ub97c ",(0,s.jsx)(n.code,{children:"[1,2]"})," \ub9ac\uc2a4\ud2b8\ub85c \ubcc0\ud658\ud55c\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"toList :: t a -> [a]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc0ac\uc2e4 ",(0,s.jsx)(n.code,{children:"toList"})," \ud568\uc218\ub294 ",(0,s.jsx)(n.code,{children:"Foldable"})," \ud074\ub798\uc2a4 \uc120\uc5b8\uc5d0\uc11c \ud2b9\ubcc4\ud55c \uc5ed\ud560\uc744 \ud55c\ub2e4. \ud074\ub798\uc2a4 \ub0b4 \ub300\ubd80\ubd84\uc758 \ub2e4\ub978 \uae30\ubcf8 \ud568\uc218\ub4e4\uc5d0 \ub300\ud55c ",(0,s.jsx)(n.strong,{children:"\uae30\ubcf8 \uc815\uc758(default definitions)"})," \ub97c \ub9ac\uc2a4\ud2b8\uc5d0 \ub300\ud55c \uae30\ubcf8 \ud568\uc218\ub97c \uc774\uc6a9\ud574 \uc81c\uacf5\ud558\ub294 \ub370 \uc0ac\uc6a9\ub420 \uc218 \uc788\uae30 \ub54c\ubb38\uc774\ub2e4."]}),"\n",(0,s.jsx)(n.p,{children:"\uad6c\uccb4\uc801\uc73c\ub85c, \ub2e4\uc74c\uacfc \uac19\uc740 \uae30\ubcf8 \uc815\uc758\ub4e4\uc744 \uac16\ub294\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"foldr f v = foldr f v . toList\nfoldl f v = foldl f v . toList\nfoldr1 f  = foldr1 f  . toList\nfoldl1 f  = foldl1 f  . toList\n\nnull      = null . toList\nlength    = length . toList\nelem x    = elem x . toList\nmaximum   = maximum . toList\nminimum   = minimum . toList\nsum       = sum . toList\nproduct   = product . toList\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc608\ub97c \ub4e4\uc5b4, ",(0,s.jsx)(n.code,{children:"null = null . toList"}),"\ub77c\ub294 \uc815\uc758\ub294 \uc5b4\ub5a4 \ub370\uc774\ud130 \uad6c\uc870\uac00 \ube44\uc5b4\uc788\ub294\uc9c0 \uc544\ub2cc\uc9c0\ub97c \uba3c\uc800 \uadf8 \uad6c\uc870\ub97c \ub9ac\uc2a4\ud2b8\ub85c \ud3bc\uce5c(flatten) \ub2e4\uc74c, \uadf8 \ub9ac\uc2a4\ud2b8\uac00 \ube44\uc5b4\uc788\ub294\uc9c0 \ud655\uc778\ud558\ub294 \ubc29\uc2dd\uc73c\ub85c \uacb0\uc815\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud55c\ub2e4. \ub2e4\ub978 \uc815\uc758\ub4e4\ub3c4 \ube44\uc2b7\ud558\uac8c \uac04\ub2e8\ud55c \ud574\uc11d\uc744 \uac16\ub294\ub2e4."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Foldable"})," \ud074\ub798\uc2a4\uc758 \ub9c8\uc9c0\ub9c9 \uc138 \uac00\uc9c0 \uae30\ubcf8 \uc815\uc758\ub294 ",(0,s.jsx)(n.code,{children:"fold"}),", ",(0,s.jsx)(n.code,{children:"foldMap"}),", ",(0,s.jsx)(n.code,{children:"toList"})," \uae30\ubcf8 \ud568\uc218\ub4e4 \uac04\uc758 \uc911\uc694\ud55c \uad00\uacc4\ub97c \uc124\uc815\ud55c\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"fold      = foldMap id\nfoldMap f = foldr (mappend . f) mempty\ntoList    = foldMap (\\x -> [x])\n"})}),"\n",(0,s.jsx)(n.p,{children:"\uc989,"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fold"}),"\ub294 \uac01 \uc6d0\uc18c\ub97c \uacb0\ud569\ud558\uae30 \uc804\uc5d0 \ud56d\ub4f1 \ud568\uc218(",(0,s.jsx)(n.code,{children:"id"}),")\ub97c \uc801\uc6a9\ud558\ub294 ",(0,s.jsx)(n.code,{children:"foldMap"}),"\uc758 \ud2b9\ubcc4\ud55c \uacbd\uc6b0\ub85c \ubcfc \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"foldMap"}),"\uc740 \uac01 \uc6d0\uc18c\uc5d0 \ud568\uc218 ",(0,s.jsx)(n.code,{children:"f"}),"\ub97c \uc801\uc6a9\ud55c \ud6c4, \ubaa8\ub178\uc774\ub4dc \uae30\ubcf8 \ud568\uc218\ub4e4(",(0,s.jsx)(n.code,{children:"mappend"}),", ",(0,s.jsx)(n.code,{children:"mempty"}),")\uc744 \uc0ac\uc6a9\ud558\uc5ec \uacb0\ud569\ud558\ub294 ",(0,s.jsx)(n.code,{children:"foldr"}),"\uc758 \uad00\uc810\uc5d0\uc11c \uc815\uc758\ub420 \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"toList"}),"\ub294 \uac01 \uc6d0\uc18c\ub97c \uc6d0\uc18c\uac00 \ud558\ub098\uc778 \ub9ac\uc2a4\ud2b8(singleton list)\ub85c \ubcc0\ud658\ud55c \ub2e4\uc74c, \ub9ac\uc2a4\ud2b8 \ubaa8\ub178\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uadf8 \uacb0\uacfc\ub4e4\uc744 \uc774\uc5b4 \ubd99\uc774\ub294 ",(0,s.jsx)(n.code,{children:"foldMap"}),"\uc758 \uad00\uc810\uc5d0\uc11c \uc815\uc758\ub420 \uc218 \uc788\ub2e4."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["\uc694\uc57d\ud558\uc790\uba74, ",(0,s.jsx)(n.code,{children:"Foldable"})," \ud074\ub798\uc2a4\ub294 \ub370\uc774\ud130 \uad6c\uc870 \ub0b4\uc758 \uac12\ub4e4\uc744 \ucc98\ub9ac\ud558\uae30 \uc704\ud55c \ub2e4\uc591\ud558\uace0 \uc720\uc6a9\ud55c \ud568\uc218\ub4e4\uc744 \uc81c\uacf5\ud558\uba70, \uc774\ub4e4 \ub300\ubd80\ubd84\uc740 \ub9ac\uc2a4\ud2b8\uc5d0 \ub300\ud55c \ud2b9\uc815 \uc778\uc2a4\ud134\uc2a4\ub098 \ud074\ub798\uc2a4 \ub0b4\uc758 \ub2e4\ub978 \uc77c\ubc18\ud654\ub41c \ud568\uc218\ub97c \uc774\uc6a9\ud55c \uae30\ubcf8 \uc815\uc758\ub97c \uac16\ub294\ub2e4. \uc774 \uc2dc\uc810\uc5d0\uc11c \uc138 \uac00\uc9c0 \uc9c8\ubb38\uc744 \ub358\uc9c8 \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\uc65c \ud074\ub798\uc2a4\uc5d0 \uadf8\ub807\uac8c \ub9ce\uc740 \ud568\uc218\uac00 \uc788\ub294\uac00? \ud2b9\ud788, ",(0,s.jsx)(n.code,{children:"null"}),", ",(0,s.jsx)(n.code,{children:"length"})," \ub4f1\uacfc \uac19\uc740 \ucd94\uac00\uc801\uc778 \uae30\ubcf8 \ud568\uc218\ub4e4\uc774 \uc65c \ud3f4\ub354\ube14 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 \uc815\uc758\uac00 \uc544\ub2cc ",(0,s.jsx)(n.code,{children:"Foldable"})," \ud074\ub798\uc2a4\uc758 \uba54\uc18c\ub4dc\ub85c \uc81c\uacf5\ub418\ub294\uc9c0 \ubb3c\uc744 \uc218 \uc788\ub2e4. \uadf8 \uc774\uc720\ub294 \ud544\uc694\ud560 \uacbd\uc6b0 \uae30\ubcf8 \uc815\uc758\ub97c \uc624\ubc84\ub77c\uc774\ub4dc(override)\ud560 \uc218 \uc788\ub3c4\ub85d \ud5c8\uc6a9\ud558\uae30 \uc704\ud568\uc774\uba70, \ub9cc\uc57d \uc774 \ud568\uc218\ub4e4\uc774 \ucd5c\uc0c1\uc704 \ud568\uc218(top-level functions)\ub85c \uc815\uc758\ub418\uc5c8\ub2e4\uba74 \uc774\uac83\uc774 \ubd88\uac00\ub2a5\ud588\uc744 \uac83\uc774\ub2e4."]}),"\n",(0,s.jsxs)(n.li,{children:["\ubb34\uc5c7\uc744 \uc218\ub3d9\uc73c\ub85c \uc815\uc758\ud574\uc57c \ud558\ub294\uac00? ",(0,s.jsx)(n.code,{children:"Foldable"})," \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc704\ud55c ",(0,s.jsx)(n.strong,{children:"\ucd5c\uc18c \uc644\uc804 \uc815\uc758(minimal complete definition)"})," \ub294 ",(0,s.jsx)(n.code,{children:"foldMap"}),"\uc774\ub098 ",(0,s.jsx)(n.code,{children:"foldr"})," \ub458 \uc911 \ud558\ub098\ub97c \uc815\uc758\ud558\ub294 \uac83\uc774\ub2e4. \ud074\ub798\uc2a4\uc758 \ub2e4\ub978 \ubaa8\ub4e0 \ud568\uc218\ub4e4\uc740 \uc774 \ub450 \ud568\uc218 \uc911 \ud558\ub098\ub85c\ubd80\ud130 \uae30\ubcf8 \uc815\uc758\uc640 \ub9ac\uc2a4\ud2b8 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud30c\uc0dd\ub420 \uc218 \uc788\uae30 \ub54c\ubb38\uc774\ub2e4. \ub9ac\uc2a4\ud2b8\uc640 \ud2b8\ub9ac\uc5d0\uc11c \uc774\ubbf8 \ubcf4\uc558\ub4ef\uc774, ",(0,s.jsx)(n.code,{children:"foldMap"})," \ud568\uc218\ub97c \uc815\uc758\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uac04\ub2e8\ud55c \uacbd\uc6b0\uac00 \ub9ce\ub2e4."]}),"\n",(0,s.jsx)(n.li,{children:"\ud6a8\uc728\uc131\uc740 \uc5b4\ub5a4\uac00? \ub9ce\uc740 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c\ub294 \ud074\ub798\uc2a4\uc5d0 \uc81c\uacf5\ub41c \uae30\ubcf8 \uc815\uc758\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc73c\ub85c \ucda9\ubd84\ud558\uc9c0\ub9cc, \ub354 \ub192\uc740 \ud6a8\uc728\uc131\uc774 \uc694\uad6c\ub41c\ub2e4\uba74 \uc704\uc5d0\uc11c \uc5b8\uae09\ud588\ub4ef\uc774 \uc774\ub4e4\uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud560 \uc218 \uc788\ub2e4. \uc2e4\uc81c\ub85c GHC \uc2dc\uc2a4\ud15c\uc740 \uc6b0\ub9ac\uac00 \uc81c\uc2dc\ud55c \ub2e8\uc21c\ud55c \ubc84\uc804\ubcf4\ub2e4 \ub354 \ud6a8\uc728\uc801\uc778 \uae30\ubcf8 \uc815\uc758\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc, \uc774\ub4e4\uc740 \uae30\ub2a5\uc801\uc73c\ub85c \uc6b0\ub9ac\uc758 \ub354 \uac04\ub2e8\ud55c \ubc84\uc804\uacfc \ub3d9\uc77c\ud558\ub2e4."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["GHC\uac00 ",(0,s.jsx)(n.code,{children:"Data.Foldable"})," \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc790\ub3d9\uc73c\ub85c \uc784\ud3ec\ud2b8\ud558\uc9c0\ub9cc, \ud604\uc7ac \ud074\ub798\uc2a4\uc758 ",(0,s.jsx)(n.code,{children:"fold"}),"\uc640 ",(0,s.jsx)(n.code,{children:"toList"})," \uba54\uc18c\ub4dc\ub294 \uc228\uae34\ub2e4\ub294 \uc810\uc744 \uc5b8\uae09\ud558\uba70 \uc774 \uc139\uc158\uc744 \ub9c8\ubb34\ub9ac\ud55c\ub2e4. \uc774\ub7ec\ud55c \uc774\uc720\ub85c, \uc6b0\ub9ac\ub294 \ud3f4\ub354\ube14 \ud0c0\uc785\uc744 \ud504\ub85c\uadf8\ub798\ubc0d\ud560 \ub54c \uc790\ub3d9\uc73c\ub85c \uc81c\uacf5\ub418\ub294 \ucd95\uc18c\ub41c \ubc84\uc804\uc5d0 \uc758\uc874\ud558\uae30\ubcf4\ub2e4\ub294 ",(0,s.jsx)(n.code,{children:"Data.Foldable"}),"\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \uc784\ud3ec\ud2b8\ud558\ub294 \uac83\uc744 \uc77c\ubc18\uc801\uc73c\ub85c \uc120\ud638\ud55c\ub2e4."]}),"\n",(0,s.jsx)(n.h3,{id:"generic-functions",children:"Generic functions"}),"\n",(0,s.jsxs)(n.p,{children:["\ud3f4\ub354\ube14 \ud0c0\uc785\uc758 \uac1c\ub150\uc744 \ucd94\uc0c1\ud654\ud558\ub294 \uac83\uc758 \uc911\uc694\ud55c \uc774\uc810\uc740 ",(0,s.jsx)(n.code,{children:"Foldable"})," \ud074\ub798\uc2a4\uc758 \uae30\ubcf8 \ud568\uc218\ub4e4\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc5b4\ub5a4 \ud3f4\ub354\ube14 \ud0c0\uc785\uacfc\ub3c4 \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc77c\ubc18\ud654\ub41c \ud568\uc218\ub97c \uc815\uc758\ud558\ub294 \ub2a5\ub825\uc774\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc815\uc218 \ub9ac\uc2a4\ud2b8\uc758 \ud3c9\uade0\uc744 \uacc4\uc0b0\ud558\ub294 \ud568\uc218\ub97c \ub2e4\uc74c\uacfc \uac19\uc774 \uc815\uc758\ud588\ub2e4\uba74"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"average :: [Int] -> Int\naverage ns = sum ns `div` length ns\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc774\uc81c ",(0,s.jsx)(n.code,{children:"sum"}),"\uacfc ",(0,s.jsx)(n.code,{children:"length"}),"\uac00 \ub9ac\uc2a4\ud2b8\uc5d0\ub9cc \uad6d\ud55c\ub418\uc9c0 \uc54a\uace0 \uc5b4\ub5a4 \ud3f4\ub354\ube14 \ud0c0\uc785\uacfc\ub3c4 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4\ub294 \uac83\uc744 \ubcf4\uc558\uc73c\ubbc0\ub85c, ",(0,s.jsx)(n.code,{children:"average"}),"\uc758 \ud0c0\uc785 \uc815\uc758 \uc790\uccb4\ub97c \ubcc0\uacbd\ud560 \ud544\uc694 \uc5c6\uc774 \uc77c\ubc18\ud654\ub420 \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"average :: Foldable t => t Int -> Int\naverage ns = sum ns `div` length ns\n"})}),"\n",(0,s.jsx)(n.p,{children:"\ub530\ub77c\uc11c, \uc774 \ud568\uc218\ub294 \uc774\uc81c \ub9ac\uc2a4\ud2b8\uc640 \ud2b8\ub9ac \ubaa8\ub450\uc5d0 \uc801\uc6a9\ub420 \uc218 \uc788\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"> average [1..10]\n5\n\n> average (Node (Leaf 1) (Leaf 3))\n2\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ube44\uc2b7\ud55c \ubc29\uc2dd\uc73c\ub85c, ",(0,s.jsx)(n.code,{children:"Data.Foldable"})," \ub77c\uc774\ube0c\ub7ec\ub9ac\ub294 \ub17c\ub9ac\uac12 \ub9ac\uc2a4\ud2b8\uc5d0 \ub300\ud574 \ub3d9\uc791\ud558\ub294 \uc775\uc219\ud55c \ud568\uc218\ub4e4\uc758 \uc77c\ubc18\ud654\ub41c \ubc84\uc804\uc744 \uc81c\uacf5\ud55c\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"and :: Foldable t => t Bool -> Bool\nand = getAll . foldMap All\n\nor :: Foldable t => t Bool -> Bool\nor = getAny . foldMap Any\n\nall :: Foldable t => (a -> Bool) -> t a -> Bool\nall p = getAll . foldMap (All . p)\n\nany :: Foldable t => (a -> Bool) -> t a -> Bool\nany p = getAny . foldMap (Any . p)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uac01 \uacbd\uc6b0, ",(0,s.jsx)(n.code,{children:"foldMap"}),"\uc744 \uc801\uc808\ud55c \ubaa8\ub178\uc774\ub4dc \uae30\ubcf8 \ud568\uc218\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uba74 \uc6d0\ud558\ub294 \ub3d9\uc791\uc744 \uc77c\ubc18\ud654\ub41c \ubc29\uc2dd\uc73c\ub85c \uc5bb\uc744 \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"> and [True,False,True]\nFalse\n\n> or (Node (Leaf True) (Leaf False))\nTrue\n\n> all even [1,2,3]\nFalse\n\n> any even (Node (Leaf 1) (Leaf 2))\nTrue\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ub9c8\uc9c0\ub9c9 \uc608\uc81c\ub85c, \ub9ac\uc2a4\ud2b8\uc758 \ub9ac\uc2a4\ud2b8\ub97c \uc774\uc5b4 \ubd99\uc774\ub294 ",(0,s.jsx)(n.code,{children:"concat :: [[a]] -> [a]"})," \ud568\uc218\ub294 \uc774\uc81c \ub9ac\uc2a4\ud2b8 \ubaa8\ub178\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac04\ub2e8\ud788 \ud3f4\ub529\ud568\uc73c\ub85c\uc368, \uc6d0\uc18c\uac00 \ub9ac\uc2a4\ud2b8\uc778 \uc784\uc758\uc758 \ud3f4\ub354\ube14 \ud0c0\uc785\uc5d0 \ub300\ud574 \uc77c\ubc18\ud654\ub420 \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"concat :: Foldable t => t [a] -> [a]\nconcat = fold\n"})}),"\n",(0,s.jsx)(n.p,{children:"\uc608\ub97c \ub4e4\uba74 \ub2e4\uc74c\uacfc \uac19\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:'> concat ["ab","cd","ef"]\n"abcdef"\n\n> concat (Node (Leaf [1,2]) (Leaf [3]))\n[1,2,3]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["\uacb0\ub860\uc801\uc73c\ub85c, \ud558\uc2a4\ucf08\uc5d0\uc11c \uc0c8\ub85c\uc6b4 \ud0c0\uc785\uc744 \uc120\uc5b8\ud560 \ub54c, \uadf8 \ud0c0\uc785\uc744 \ud3f4\ub354\ube14 \ud0c0\uc785\uc73c\ub85c \ub9cc\ub4e4 \uc218 \uc788\ub294\uc9c0 \uace0\ub824\ud558\ub294 \uac83\uc774 \uc720\uc6a9\ud558\ub2e4. \uadf8\ub807\uac8c \ud558\ub294 \uac83\uc758 \uc7a5\uc810\uc740 ",(0,s.jsx)(n.code,{children:"Foldable"})," \ud074\ub798\uc2a4\uc5d0 \ud3ec\ud568\ub41c \uae30\ubcf8 \uc815\uc758\ub4e4\uacfc \uc774 \uae30\ubcf8 \ud568\uc218\ub4e4\uc744 \uc774\uc6a9\ud574 \uc815\uc758\ub41c \ub2e4\ub978 \uc77c\ubc18\ud654\ub41c \ud568\uc218\ub4e4\uc744 \ud1b5\ud574, \ud574\ub2f9 \ud0c0\uc785\uc744 \uc704\ud55c \ub2e4\uc591\ud558\uace0 \uc720\uc6a9\ud55c \ud568\uc218\ub4e4\uc744 \ubcf8\uc9c8\uc801\uc73c\ub85c '\uacf5\uc9dc\ub85c' \uc81c\uacf5\ubc1b\ub294\ub2e4\ub294 \uc810\uc774\ub2e4."]}),"\n",(0,s.jsx)(n.h2,{id:"traversables",children:"Traversables"}),"\n",(0,s.jsx)(n.p,{children:"\ub370\uc774\ud130 \uad6c\uc870\uc758 \uac01 \uc6d0\uc18c \uc704\ub85c \ud568\uc218\ub97c \ub9e4\ud551\ud558\ub294 \uc544\uc774\ub514\uc5b4\ub294 \ud391\ud130\ub77c\ub294 \uac1c\ub150\uc73c\ub85c \ud3ec\ucc29\ub41c\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"class Functor f where\n    fmap :: (a -> b) -> f a -> f b\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc608\ub97c \ub4e4\uc5b4, \ub9ac\uc2a4\ud2b8\uc758 \uacbd\uc6b0 \uae30\ubcf8 ",(0,s.jsx)(n.code,{children:"fmap"}),"\uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \uc7ac\uadc0\uc801\uc73c\ub85c \uc815\uc758\ub420 \uc218 \uc788\ub294 \uc775\uc219\ud55c \ub77c\uc774\ube0c\ub7ec\ub9ac \ud568\uc218 ",(0,s.jsx)(n.code,{children:"map"}),"\uc774\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"map :: (a -> b) -> [a] -> [b]\nmap g [] = []\nmap g (x:xs) = g x : map g xs\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ud558\uc9c0\ub9cc \ub9ac\uc2a4\ud2b8 \uc704\ub85c \ud568\uc218\ub97c \ub9e4\ud551\ud558\ub294 \uc544\uc774\ub514\uc5b4\ub294 \uc77c\ubc18\ud654\ub420 \uc218 \uc788\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uac01 \uc6d0\uc18c\uc5d0 \uc801\uc6a9\ub418\ub294 \ud568\uc218 ",(0,s.jsx)(n.code,{children:"g"}),"\uac00 \uc2e4\ud328\ud560 \uc218 \uc788\ub2e4\uace0 \uac00\uc815\ud574\ubcf4\uc790. \uc989, ",(0,s.jsx)(n.code,{children:"a -> b"}),"\uac00 \uc544\ub2cc ",(0,s.jsx)(n.code,{children:"a -> Maybe b"})," \ud0c0\uc785\uc744 \uac16\ub294\ub2e4\ub294 \uc758\ubbf8\uc774\ub2e4. \uadf8\ub9ac\uace0 \uc804\uccb4 \ub9e4\ud551\uc740 \ubaa8\ub4e0 \uac1c\ubcc4 \uc801\uc6a9\uc774 \uc131\uacf5\ud560 \uacbd\uc6b0\uc5d0\ub9cc \uc131\uacf5\ud55c\ub2e4\uace0 \ud558\uc790. ",(0,s.jsx)(n.code,{children:"Maybe"}),"\uac00 \uc5b4\ud50c\ub9ac\ucee4\ud2f0\ube0c(applicative)\ub77c\ub294 \uc0ac\uc2e4\uc744 \uc774\uc6a9\ud558\uba74, \uc774 \ub3d9\uc791\uc744 \uad6c\ud604\ud558\ub294 \ud568\uc218\ub97c \uc27d\uac8c \uc815\uc758\ud560 \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"traverse :: (a -> Maybe b) -> [a] -> Maybe [b]\ntraverse g []     = pure []\ntraverse g (x:xs) = pure (:) <*> g x <*> traverse g xs\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc774 \uc815\uc758\uc758 \uc7ac\uadc0 \uad6c\uc870\ub294 ",(0,s.jsx)(n.code,{children:"map"}),"\uacfc \ubcf8\uc9c8\uc801\uc73c\ub85c \ub3d9\uc77c\ud558\uc9c0\ub9cc, \uc2e4\ud328 \uac00\ub2a5\uc131\uc744 \uad00\ub9ac\ud558\uae30 \uc704\ud574 \uc5b4\ud50c\ub9ac\ucee4\ud2f0\ube0c \uba54\ucee4\ub2c8\uc998\uc774 \uc0ac\uc6a9\ub418\uc5c8\ub2e4\ub294 \uc810\uc774 \ub2e4\ub974\ub2e4. \uc774\ub7f0 \uc2dd\uc73c\ub85c, ",(0,s.jsx)(n.code,{children:"traverse"}),"\ub294 \uc2e4\ud328\ud560 \uc218 \uc788\ub294 \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9ac\uc2a4\ud2b8\uc758 \uc6d0\uc18c\ub97c \uc21c\ud68c\ud558\ub294 \uac04\ub2e8\ud55c \uc218\ub2e8\uc744 \uc81c\uacf5\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc815\uc218\uac00 \uc591\uc218\uc77c \ub54c\ub9cc 1\uc744 \uac10\uc18c\uc2dc\ud0a4\ub294 \ud568\uc218\ub97c \uc815\uc758\ud558\uae30 \uc704\ud574 ",(0,s.jsx)(n.code,{children:"Maybe"})," \ud0c0\uc785\uc744 \uc0ac\uc6a9\ud55c\ub2e4\uace0 \uac00\uc815\ud574\ubcf4\uc790."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"dec :: Int -> Maybe Int\ndec n = if n > 0 then Just (n-1) else Nothing\n"})}),"\n",(0,s.jsx)(n.p,{children:"\uadf8\ub7ec\uba74 \ub2e4\uc74c\uacfc \uac19\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"> traverse dec [1,2,3]\nJust [0,1,2]\n\n> traverse dec [2,1,0]\nNothing\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ub180\ub78d\uc9c0 \uc54a\uac8c\ub3c4, \uc704\uc640 \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \ub370\uc774\ud130 \uad6c\uc870\ub97c \uc21c\ud68c\ud558\ub294 \uc544\uc774\ub514\uc5b4\ub294 \ub9ac\uc2a4\ud2b8 \ud0c0\uc785\uc5d0\ub9cc \uad6d\ud55c\ub418\uc9c0 \uc54a\uc73c\uba70, \uc2e4\ud328\ud560 \uc218 \uc788\ub294 \uc778\uc790 \ud568\uc218\uc5d0\ub9cc \ud2b9\uc815\ub418\uc9c0\ub3c4 \uc54a\ub294\ub2e4. \uc774\ub7ec\ud55c \uc77c\ubc18\ud654\ub41c \ub9e4\ud551\uc744 \uc9c0\uc6d0\ud558\ub294 \ud0c0\uc785 \ud074\ub798\uc2a4\ub97c \uc21c\ud68c \uac00\ub2a5\ud55c \ud0c0\uc785(traversable types), \uc904\uc5ec\uc11c ",(0,s.jsx)(n.strong,{children:"\ud2b8\ub798\ubc84\uc11c\ube14(traversables)"})," \uc774\ub77c\uace0 \ubd80\ub978\ub2e4."]}),"\n",(0,s.jsx)(n.p,{children:"\ud558\uc2a4\ucf08\uc5d0\uc11c \uc774 \uac1c\ub150\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \ub0b4\uc7a5 \ud074\ub798\uc2a4 \uc120\uc5b8\uc73c\ub85c \uad6c\ud604\ub41c\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"class (Functor t, Foldable t) => Traversable t where\n    traverse :: Applicative f => (a -> f b) -> t a -> f (t b)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc989, \ud391\ud130\uc774\uba74\uc11c \ud3f4\ub354\ube14\uc778 \ub9e4\uac1c\ubcc0\uc218\ud654\ub41c \ud0c0\uc785 ",(0,s.jsx)(n.code,{children:"t"}),"\uac00 ",(0,s.jsx)(n.code,{children:"Traversable"})," \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \ub418\ub824\uba74, \uba85\uc2dc\ub41c \ud0c0\uc785\uc758 ",(0,s.jsx)(n.code,{children:"traverse"})," \ud568\uc218\ub97c \uc9c0\uc6d0\ud574\uc57c \ud55c\ub2e4."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"t"}),"\uac00 ",(0,s.jsx)(n.strong,{children:"\ud391\ud130(functor)"})," \uc5ec\uc57c \ud55c\ub2e4\ub294 \uc694\uad6c\uc0ac\ud56d\uc740 \ud2b8\ub798\ubc84\uc11c\ube14\uc774 \ub9e4\ud551\uc758 \uc544\uc774\ub514\uc5b4\ub97c \uc77c\ubc18\ud654\ud558\ubbc0\ub85c ",(0,s.jsx)(n.code,{children:"fmap"})," \uae30\ubcf8 \ud568\uc218\ub97c \uc9c0\uc6d0\ud560 \uac83\uc73c\ub85c \uae30\ub300\ub41c\ub2e4\ub294 \uc0ac\uc2e4\uc744 \ubc18\uc601\ud55c\ub2e4."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"t"}),"\uac00 ",(0,s.jsx)(n.strong,{children:"\ud3f4\ub354\ube14(foldable)"})," \uc774\uc5b4\uc57c \ud55c\ub2e4\ub294 \uc694\uad6c\uc0ac\ud56d\uc740 \ud2b8\ub798\ubc84\uc11c\ube14 \ud0c0\uc785\uc758 \uac12\ub4e4\uc774 \uc6d0\ud55c\ub2e4\uba74 \ud3f4\ub529\ub420 \uc218\ub3c4 \uc788\uc74c\uc744 \ubcf4\uc7a5\ud55c\ub2e4."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"examples-2",children:"Examples"}),"\n",(0,s.jsxs)(n.p,{children:["\ub9ac\uc2a4\ud2b8\ub294 \ud391\ud130\uc774\uba74\uc11c \ud3f4\ub354\ube14\uc774\uae30 \ub54c\ubb38\uc5d0, \ub9ac\uc2a4\ud2b8 \ud0c0\uc785\uc740 ",(0,s.jsx)(n.code,{children:"traverse"}),"\ub97c ",(0,s.jsx)(n.code,{children:"Maybe"})," \ud0c0\uc785\uc5d0\uc11c \uc784\uc758\uc758 \uc5b4\ud50c\ub9ac\ucee4\ud2f0\ube0c\ub85c \ub2e8\uc21c\ud558\uac8c \uc77c\ubc18\ud654\ud568\uc73c\ub85c\uc368 \ud2b8\ub798\ubc84\uc11c\ube14\ub85c \ub9cc\ub4e4 \uc218 \uc788\ub2e4. \uc989, \uc815\uc758\ub294 \ub3d9\uc77c\ud558\uac8c \uc720\uc9c0\ub418\uc9c0\ub9cc \ud0c0\uc785\uc740 \uc77c\ubc18\ud654\ub41c\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"instance Traversable [] where\n    -- traverse :: Applicative f => (a -> f b) -> [a] -> f [b]\n    traverse g []     = pure []\n    traverse g (x:xs) = pure (:) <*> g x <*> traverse g xs\n"})}),"\n",(0,s.jsx)(n.p,{children:"\ud2b8\ub9ac\uc5d0 \ub300\ud55c \uc778\uc2a4\ud134\uc2a4\ub3c4 \ube44\uc2b7\ud55c \ubc29\uc2dd\uc73c\ub85c \uc815\uc758\ub420 \uc218 \uc788\uc9c0\ub9cc, \uc778\uc790 \ud568\uc218\uc758 \uc801\uc6a9\uc774 \uae30\ubcf8 \ucf00\uc774\uc2a4(base case)\uc5d0\uc11c \uc77c\uc5b4\ub09c\ub2e4\ub294 \uc810\uc774 \ub2e4\ub974\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"instance Traversable Tree where\n    -- traverse :: Applicative f => (a -> f b) -> Tree a -> f (Tree b)\n    traverse g (Leaf x)   = pure Leaf <*> g x\n    traverse g (Node l r) = pure Node <*> traverse g l <*> traverse g r\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uc608\ub97c \ub4e4\uc5b4, \uc774\uc81c ",(0,s.jsx)(n.code,{children:"traverse"}),"\ub294 \uc774\uc804 \uc139\uc158\uc758 ",(0,s.jsx)(n.code,{children:"dec"}),"\uc640 \uac19\uc774 \uc2e4\ud328\ud560 \uc218 \uc788\ub294 \ud568\uc218\ub97c \ub9ac\uc2a4\ud2b8\uc640 \ud2b8\ub9ac \ubaa8\ub450\uc5d0 \ub9e4\ud551\ud558\ub294 \ub370 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"> traverse dec [1,2,3]\nJust [0,1,2]\n\n> traverse dec [2,1,0]\nNothing\n\n> traverse dec (Node (Leaf 1) (Leaf 2))\nJust (Node (Leaf 0) (Leaf 1))\n\n> traverse dec (Node (Leaf 0) (Leaf 1))\nNothing\n"})}),"\n",(0,s.jsx)(n.h3,{id:"other-primitives-and-defaults-1",children:"Other primitives and defaults"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"traverse"})," \uae30\ubcf8 \ud568\uc218 \uc678\uc5d0\ub3c4 ",(0,s.jsx)(n.code,{children:"Traversable"})," \ud074\ub798\uc2a4\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ucd94\uac00 \ud568\uc218\uc640 \uae30\ubcf8 \uc815\uc758\ub97c \ud3ec\ud568\ud55c\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"sequenceA :: Applicative f => t (f a) -> f (t a)\nsequenceA = traverse id\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"sequenceA"}),"\uc758 \ud0c0\uc785\uc740 \uc774 \ud568\uc218\uac00 \uc5b4\ud50c\ub9ac\ucee4\ud2f0\ube0c \uc561\uc158\uc744 \uc6d0\uc18c\ub85c \uac16\ub294 \ub370\uc774\ud130 \uad6c\uc870\ub97c, \ub370\uc774\ud130 \uad6c\uc870\ub97c \ubc18\ud658\ud558\ub294 \ub2e8\uc77c \uc561\uc158\uc73c\ub85c \ubcc0\ud658\ud568\uc744 \ub098\ud0c0\ub0b8\ub2e4. \uadf8\ub9ac\uace0 \uadf8 \uc815\uc758\ub294 \ud56d\ub4f1 \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad6c\uc870\ub97c \uc21c\ud68c\ud568\uc73c\ub85c\uc368 \uc774\ub97c \ub2ec\uc131\ud55c\ub2e4\uace0 \ub9d0\ud558\ub294\ub370, \uc774 \uacbd\uc6b0 \ud56d\ub4f1 \ud568\uc218\ub294 ",(0,s.jsx)(n.code,{children:"f a -> f a"})," \ud0c0\uc785\uc744 \uac16\ub294\ub2e4. \uc608\ub97c \ub4e4\uc5b4, ",(0,s.jsx)(n.code,{children:"sequenceA"}),"\ub294 \uc2e4\ud328\ud560 \uc218 \uc788\ub294 \uc6d0\uc18c\ub4e4\uc744 \ud3ec\ud568\ud558\ub294 \ub370\uc774\ud130 \uad6c\uc870\ub97c \ubcc0\ud658\ud558\ub294 \ub370 \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"> sequenceA [Just 1, Just 2, Just 3]\nJust [1,2,3]\n\n> sequenceA [Just 1, Nothing, Just 3]\nNothing\n\n> sequenceA (Node (Leaf (Just 1)) (Leaf (Just 2)))\nJust (Node (Leaf 1) (Leaf 2))\n\n> sequenceA (Node (Leaf (Just 1)) (Leaf Nothing))\nNothing\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\ubc18\ub300\ub85c, \ud074\ub798\uc2a4 \uc120\uc5b8\uc740 ",(0,s.jsx)(n.code,{children:"sequenceA"}),"\ub97c \uc774\uc6a9\ud55c ",(0,s.jsx)(n.code,{children:"traverse"}),"\uc758 \uae30\ubcf8 \uc815\uc758\ub3c4 \ud3ec\ud568\ud55c\ub2e4. \uc774\ub294 \ud6a8\uacfc\uac00 \uc788\ub294 \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130 \uad6c\uc870\ub97c \uc21c\ud68c\ud558\uae30 \uc704\ud574, \uba3c\uc800 ",(0,s.jsx)(n.code,{children:"fmap"}),"\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac01 \uc6d0\uc18c\uc5d0 \ud568\uc218\ub97c \uc801\uc6a9\ud55c \ub2e4\uc74c ",(0,s.jsx)(n.code,{children:"sequenceA"}),"\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ud6a8\uacfc\ub97c \uacb0\ud569\ud560 \uc218 \uc788\uc74c\uc744 \ud45c\ud604\ud55c\ub2e4."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"-- traverse :: Applicative f => (a -> f b) -> t a -> f (t b)\ntraverse g = sequenceA . fmap g\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Traversable"})," \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc120\uc5b8\ud558\ub824\uba74 ",(0,s.jsx)(n.code,{children:"traverse"}),"\ub098 ",(0,s.jsx)(n.code,{children:"sequenceA"})," \uc911 \ud558\ub098\ub97c \uc815\uc758\ud558\ub294 \uac83\uc73c\ub85c \ucda9\ubd84\ud558\ub2e4. \ub2e4\ub978 \ud558\ub098\ub294 \uc704 \uae30\ubcf8 \uc815\uc758\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud30c\uc0dd\ub420 \uc218 \uc788\uae30 \ub54c\ubb38\uc774\ub2e4. \ud558\uc9c0\ub9cc ",(0,s.jsx)(n.code,{children:"traverse"}),"\uc758 \uae30\ubcf8 \uc815\uc758\ub294 \ub370\uc774\ud130 \uad6c\uc870\ub97c \ub450 \ubc88 \uc21c\ud68c(\ud55c \ubc88\uc740 ",(0,s.jsx)(n.code,{children:"fmap"}),", \ud55c \ubc88\uc740 ",(0,s.jsx)(n.code,{children:"sequenceA"}),")\ud558\ubbc0\ub85c, ",(0,s.jsx)(n.code,{children:"sequenceA"}),"\ubcf4\ub2e4\ub294 ",(0,s.jsx)(n.code,{children:"traverse"}),"\ub97c \uc815\uc758\ud558\ub294 \uac83\uc774 \uc77c\ubc18\uc801\uc73c\ub85c \uc120\ud638\ub41c\ub2e4."]}),"\n",(0,s.jsx)(n.p,{children:"\ub9c8\uc9c0\ub9c9\uc73c\ub85c, \ud074\ub798\uc2a4\ub294 \uad00\ub828\ub41c \ud6a8\uacfc\uac00 \uc5b4\ud50c\ub9ac\ucee4\ud2f0\ube0c\uac00 \uc544\ub2cc \ubaa8\ub098\ub4dc\uc778 \ud2b9\ubcc4\ud55c \uacbd\uc6b0\ub97c \uc704\ud574 \ub450 \ud2b8\ub798\ubc84\uc11c\ube14 \uae30\ubcf8 \ud568\uc218\uc5d0 \ub300\ud55c \ud2b9\ubcc4\ud55c \uc774\ub984\ub3c4 \uc81c\uacf5\ud55c\ub2e4."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"mapM     :: Monad m => (a -> m b) -> t a -> m (t b)\nmapM     = traverse\n\nsequence :: Monad m => t (m a) -> m (t a)\nsequence = sequenceA\n"})}),"\n",(0,s.jsxs)(n.p,{children:["\uacb0\ub860\uc801\uc73c\ub85c, \uc0c8\ub85c\uc6b4 \ud0c0\uc785\uc744 \uc120\uc5b8\ud560 \ub54c ",(0,s.jsx)(n.code,{children:"traverse"}),"\ub098 ",(0,s.jsx)(n.code,{children:"sequenceA"})," \uae30\ubcf8 \ud568\uc218 \uc911 \ud558\ub098\ub97c \uc815\uc758\ud568\uc73c\ub85c\uc368 \uadf8 \ud0c0\uc785\uc744 \ud2b8\ub798\ubc84\uc11c\ube14 \ud0c0\uc785\uc73c\ub85c \ub9cc\ub4e4 \uc218 \uc788\ub294\uc9c0 \uace0\ub824\ud558\ub294 \uac83\uc774 \uc720\uc6a9\ud558\ub2e4. \uadf8\ub807\uac8c \ud558\ub294 \uac83\uc758 \uc7a5\uc810\uc740 ",(0,s.jsx)(n.code,{children:"Traversable"})," \ud074\ub798\uc2a4\uc758 \uae30\ubcf8 \uc815\uc758\ub4e4\uc744 \ud1b5\ud574 \ud574\ub2f9 \ud0c0\uc785\uc744 \uc0ac\uc6a9\ud55c effectful \ud504\ub85c\uadf8\ub798\ubc0d\uc744 \uc704\ud55c \uc5ec\ub7ec \uc720\uc6a9\ud55c \ud568\uc218\ub4e4\uc744 \uc81c\uacf5\ubc1b\ub294\ub2e4\ub294 \uc810\uc774\ub2e4."]})]})}function x(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},7380:e=>{e.exports=JSON.parse('{"permalink":"/blog/foldables-and-friends","editUrl":"https://github.com/dream2405/blog/tree/main/blog/2025-09-04-hs-ch14/index.md","source":"@site/blog/2025-09-04-hs-ch14/index.md","title":"Foldables and friends","description":"banner","date":"2025-09-04T00:00:00.000Z","tags":[{"inline":false,"label":"Haskell","permalink":"/blog/tags/haskell","description":"Haskell tag description"},{"inline":false,"label":"\ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d","permalink":"/blog/tags/functional-programming","description":"\ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d \ud328\ub7ec\ub2e4\uc784\uc5d0 \ub300\ud55c \uae00"}],"readingTime":17.36,"hasTruncateMarker":true,"authors":[{"name":"dream2405","title":"\uac8c\uc73c\ub978 \ub300\ud559\uc0dd","socials":{"github":"https://github.com/dream2405"},"imageURL":"https://github.com/dream2405.png","key":"dream2405","page":null}],"frontMatter":{"slug":"foldables-and-friends","title":"Foldables and friends","authors":["dream2405"],"tags":["haskell","functional_programming"],"image":"./image.png"},"unlisted":false,"nextItem":{"title":"An Introduction to wait-free algorithms","permalink":"/blog/intro-wait-free-algorithms"}}')},8453:(e,n,d)=>{d.d(n,{R:()=>c,x:()=>r});var l=d(6540);const s={},a=l.createContext(s);function c(e){const n=l.useContext(a);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),l.createElement(a.Provider,{value:n},e.children)}},8543:(e,n,d)=>{d.d(n,{A:()=>l});const l=d.p+"assets/images/image-6202ed0ce435d6b35da6e345b4ca8ba7.png"}}]);