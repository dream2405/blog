"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[407],{2950:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>n,toc:()=>c});var n=a(7225),i=a(4848),o=a(8453);const s={slug:"lazy-evaluation",title:"Lazy evaluation",authors:["dream2405"],tags:["haskell","functional_programming"],image:"./image-3.png"},r=void 0,l={image:a(7939).A,authorsImageUrls:[void 0]},c=[];function u(e){const t={p:"p",...(0,o.R)(),...e.components};return(0,i.jsx)(t.p,{children:"In this chapter we introduce lazy evaluation, the mechanism used to evaluate expressions in Haskell. We start by reviewing the notion of evaluation, then consider evaluation strategies and their properties, discuss infinite structures and modular programming, and conclude with a special form of function application that can improve the space performance of programs."})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},7225:e=>{e.exports=JSON.parse('{"permalink":"/blog/lazy-evaluation","editUrl":"https://github.com/dream2405/blog/tree/main/blog/2025-09-05-hs-ch15/index.md","source":"@site/blog/2025-09-05-hs-ch15/index.md","title":"Lazy evaluation","description":"In this chapter we introduce lazy evaluation, the mechanism used to evaluate expressions in Haskell. We start by reviewing the notion of evaluation, then consider evaluation strategies and their properties, discuss infinite structures and modular programming, and conclude with a special form of function application that can improve the space performance of programs.","date":"2025-09-05T00:00:00.000Z","tags":[{"inline":false,"label":"Haskell","permalink":"/blog/tags/haskell","description":"Haskell tag description"},{"inline":false,"label":"\ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d","permalink":"/blog/tags/functional-programming","description":"\ud568\uc218\ud615 \ud504\ub85c\uadf8\ub798\ubc0d \ud328\ub7ec\ub2e4\uc784\uc5d0 \ub300\ud55c \uae00"}],"readingTime":20.24,"hasTruncateMarker":true,"authors":[{"name":"dream2405","title":"\uac8c\uc73c\ub978 \ub300\ud559\uc0dd","socials":{"github":"https://github.com/dream2405"},"imageURL":"https://github.com/dream2405.png","key":"dream2405","page":null}],"frontMatter":{"slug":"lazy-evaluation","title":"Lazy evaluation","authors":["dream2405"],"tags":["haskell","functional_programming"],"image":"./image-3.png"},"unlisted":false,"prevItem":{"title":"Reasoning about programs","permalink":"/blog/reasoning-about-programs"},"nextItem":{"title":"Foldables and friends","permalink":"/blog/foldables-and-friends"}}')},7939:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/image-3-1fec726ef6a89f5c496d1b51e794c29b.png"},8453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>r});var n=a(6540);const i={},o=n.createContext(i);function s(e){const t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);